type DIDProfile = record {
  registration_date : Time;
  owner : principal;
  name : text;
  contact_info : text;
  entity_type : text;
};
type DID_SBT_Ledger = service {
  authorize_minter : (principal) -> (Result);
  get_did : (principal) -> (opt DIDProfile) query;
  get_sbts : (principal) -> (vec SBT) query;
  mint_sbt : (principal, text, text) -> (Result);
  register_did : (text, text, text) -> (text);
};
type Result = variant { ok : text; err : text };
type SBT = record {
  issued_at : Time;
  badge_id : nat;
  issuer : principal;
  event_name : text;
  badge_type : text;
};
type Time = int;
service : (principal) -> DID_SBT_Ledger