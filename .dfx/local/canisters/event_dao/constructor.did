type ValidatedEventData = 
 record {
   details_json: text;
   event_type: text;
   severity: text;
 };
type ProposalInfo = 
 record {
   amount_requested: nat;
   description: text;
   id: nat;
   is_executed: bool;
   proposer: principal;
   recipient_wallet: principal;
   title: text;
   votes_against: nat;
   votes_for: nat;
 };
type ProposalId = nat;
type InitArgs = 
 record {
   event_data: ValidatedEventData;
   factory_principal: principal;
 };
service : {
  donate: (amount: nat) -> (text);
  get_all_proposals: () -> (vec ProposalInfo) query;
  get_event_details: () -> (opt ValidatedEventData) query;
  initialize: (args: InitArgs) -> (text);
  submit_proposal: (title: text, description: text, amount: nat, recipient:
   principal) -> (text);
  vote: (proposalId: ProposalId, in_favor: bool) -> (text);
}
