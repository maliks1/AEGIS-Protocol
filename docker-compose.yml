# docker-compose.yml
# File ini akan menjalankan semua layanan backend (ICP & Agen AI) dengan satu perintah.
# Jalankan dengan: docker-compose up --build

services:
  # Layanan ini akan memulai replika ICP dan men-deploy semua canister.
  dfx-replica:
    # Menggunakan image SDK resmi yang benar dari DFINITY.
    image: dfinity/sdk
    container_name: aegis-dfx-replica
    ports:
      - "4943:4943" # Port standar dfx yang baru.
    working_dir: /work
    volumes:
      # Menghubungkan folder backend blockchain Anda ke dalam container.
      - ./services/2-backend-blockchain-icp:/work
    # Perintah ini akan:
    # 1. Memulai replika di latar belakang.
    # 2. Menunggu 10 detik agar replika siap.
    # 3. Men-deploy semua canister.
    # 4. Tetap berjalan agar container tidak mati.
    command: >
      sh -c "
        dfx start --background --clean --host 0.0.0.0:4943 && 
        sleep 10 && 
        dfx deploy && 
        tail -f /dev/null
      "

  # Layanan untuk menjalankan Oracle Agent.
  oracle-agent:
    build:
      context: ./services/3-backend-ai-agents
      dockerfile: Dockerfile
    container_name: aegis-oracle-agent
    command: python agents/oracle_agent.py
    ports:
      - "8001:8001"
    depends_on:
      - dfx-replica # Akan menunggu dfx-replica siap sebelum dimulai.
    restart: on-failure

  # Layanan untuk menjalankan Validator Agent.
  validator-agent:
    build:
      context: ./services/3-backend-ai-agents
      dockerfile: Dockerfile
    container_name: aegis-validator-agent
    command: python agents/validator_agent.py
    ports:
      - "8002:8002"
    depends_on:
      - dfx-replica
    restart: on-failure

  # Layanan untuk menjalankan Action Agent.
  action-agent:
    build:
      context: ./services/3-backend-ai-agents
      dockerfile: Dockerfile
    container_name: aegis-action-agent
    command: python agents/action_agent.py
    ports:
      - "8003:8003"
    environment:
      # Variabel ini akan diisi secara otomatis setelah dfx deploy selesai.
      - EVENT_FACTORY_CANISTER_ID=${EVENT_FACTORY_CANISTER_ID}
      # Mengubah URL ICP untuk menunjuk ke layanan Docker dfx-replica.
      - ICP_URL=http://dfx-replica:4943
    volumes:
      # Memastikan identity.pem dan canister_ids.json tersedia di dalam container.
      - ./services/3-backend-ai-agents/identity.pem:/app/identity.pem
      - ./services/2-backend-blockchain-icp/.dfx/local/canister_ids.json:/app/canister_ids.json
    depends_on:
      - dfx-replica
    restart: on-failure